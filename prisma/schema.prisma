// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?  @db.VarChar(100)
  password  String
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  polls     Poll[]   @relation("UserPolls")
  votes     Vote[]   @relation("UserVotes")
  allowedPolls pollAllowedUsers[] @relation("UserAllowedPolls")
}
model Poll {
  id        String    @id @default(cuid())
  title     String
  description String? 
  creator   User      @relation("UserPolls", fields: [createdBy], references: [id])
  createdBy String
  createdAt DateTime  @default(now())
  expiresAt DateTime?  
  votes     Vote[]    @relation("PollVotes")
  options   pollOption[] @relation("PollOptions")
  isPublic  Boolean  @default(true)
  isDeleted Boolean  @default(false)
  allowedUsers pollAllowedUsers[] @relation("PollAllowedUsers")
  duration  Int     @default(120)
  @@index([createdBy])
  @@index([title])
}

model pollOption {
  id     String @id @default(cuid())
  poll   Poll   @relation("PollOptions", fields: [pollId], references: [id])
  pollId String
  option String
  votes  Int    @default(0)
  votesList Vote[] @relation("voteOption")
  @@index([pollId])
  @@unique([pollId, option])
}

model Vote{

  id        String   @id @default(cuid())
  poll      Poll     @relation("PollVotes", fields: [pollId], references: [id])
  pollId    String
  user      User     @relation("UserVotes", fields: [userId], references: [id])
  userId    String
  option    pollOption @relation("voteOption", fields: [optionId], references: [id])
  optionId  String
  createdAt DateTime @default(now())

  @@unique([pollId, userId]) 
}
model pollAllowedUsers {
  id        String   @id @default(cuid())
  poll      Poll     @relation("PollAllowedUsers", fields: [pollId], references: [id])
  pollId    String
  user      User     @relation("UserAllowedPolls", fields: [userId], references: [id])
  userId    String

  @@unique([pollId, userId])

}